


ARM Macro Assembler    Page 1 


    1 00000000         ; SysTick.s
    2 00000000         ; Runs on LM4F120/TM4C123
    3 00000000         ; Provide functions that initialize the SysTick module, 
                       wait at least a
    4 00000000         ; designated number of clock cycles, and wait approximat
                       ely a multiple
    5 00000000         ; of 10 milliseconds using busy wait.  After a power-on-
                       reset, the
    6 00000000         ; LM4F120 gets its clock from the 16 MHz precision inter
                       nal oscillator,
    7 00000000         ; which can vary by +/- 1% at room temperature and +/- 3
                       % across all
    8 00000000         ; temperature ranges.  If you are using this module, you
                        may need more
    9 00000000         ; precise timing, so it is assumed that you are using th
                       e PLL to set
   10 00000000         ; the system clock to 50 MHz.  This matters for the func
                       tion
   11 00000000         ; SysTick_Wait10ms(), which will wait longer than 10 ms 
                       if the clock is
   12 00000000         ; slower.
   13 00000000         ; Daniel Valvano
   14 00000000         ; September 12, 2013
   15 00000000         
   16 00000000         ;  This example accompanies the book
   17 00000000         ;  "Embedded Systems: Introduction to ARM Cortex M Micro
                       controllers",
   18 00000000         ;  ISBN: 978-1469998749, Jonathan Valvano, copyright (c)
                        2015
   19 00000000         ;  Program 2.11, Section 2.6
   20 00000000         ;
   21 00000000         ;Copyright 2015 by Jonathan W. Valvano, valvano@mail.ute
                       xas.edu
   22 00000000         ;   You may use, edit, run or distribute this file
   23 00000000         ;   as long as the above copyright notice remains
   24 00000000         ;THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHET
                       HER EXPRESS, IMPLIED
   25 00000000         ;OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WA
                       RRANTIES OF
   26 00000000         ;MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE AP
                       PLY TO THIS SOFTWARE.
   27 00000000         ;VALVANO SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR 
                       SPECIAL, INCIDENTAL,
   28 00000000         ;OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
   29 00000000         ;For more information about my classes, my research, and
                        my books, see
   30 00000000         ;http://users.ece.utexas.edu/~valvano/
   31 00000000         
   32 00000000 E000E010 
                       NVIC_ST_CTRL_R
                               EQU              0xE000E010
   33 00000000 E000E014 
                       NVIC_ST_RELOAD_R
                               EQU              0xE000E014
   34 00000000 E000E018 
                       NVIC_ST_CURRENT_R
                               EQU              0xE000E018
   35 00000000 E000ED20 
                       NVIC_SYS_PRI3_R



ARM Macro Assembler    Page 2 


                               EQU              0xE000ED20
   36 00000000 00010000 
                       NVIC_ST_CTRL_COUNT
                               EQU              0x00010000  ; Count flag
   37 00000000 00000004 
                       NVIC_ST_CTRL_CLK_SRC
                               EQU              0x00000004  ; Clock Source
   38 00000000 00000002 
                       NVIC_ST_CTRL_INTEN
                               EQU              0x00000002  ; Interrupt enable
   39 00000000 00000001 
                       NVIC_ST_CTRL_ENABLE
                               EQU              0x00000001  ; Counter mode
   40 00000000 00FFFFFF 
                       NVIC_ST_RELOAD_M
                               EQU              0x00FFFFFF  ; Counter load valu
                                                            e
   41 00000000 400253FC 
                       GPIO_PORTF_DATA_R
                               EQU              0x400253FC  ; PORTF DATA
   42 00000000 40025010 
                       PF2     EQU              0x40025010
   43 00000000         
   44 00000000         
   45 00000000                 THUMB
   46 00000000                 PRESERVE8
   47 00000000                 AREA             DATA, ALIGN=2
   48 00000000         
   49 00000000 00 00 00 
              00       Counts  SPACE            4
   50 00000004         
   51 00000004                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   52 00000000                 EXPORT           SysTick_Init
   53 00000000                 EXPORT           SysTick_Wait
   54 00000000                 EXPORT           SysTick_Wait10ms
   55 00000000                 EXPORT           SysTick_Handler
   56 00000000                 EXPORT           Counts
   57 00000000                 EXPORT           launch_first_thread
   58 00000000                 IMPORT           Runptr
   59 00000000                 IMPORT           STACK
   60 00000000                 IMPORT           threads
   61 00000000                 IMPORT           Scheduler
   62 00000000                 IMPORT           EnableInterrupts
   63 00000000                 IMPORT           DisableInterrupts
   64 00000000         ;------------SysTick_Init------------
   65 00000000         ; Initialize SysTick with busy wait running at bus clock
                       .
   66 00000000         ; Input: none
   67 00000000         ; Output: none
   68 00000000         ; Modifies: R0, R1
   69 00000000         SysTick_Init
   70 00000000         ; disable SysTick during setup
   71 00000000 4938            LDR              R1, =NVIC_ST_CTRL_R ; R1 = &NVI
                                                            C_ST_CTRL_R
   72 00000002 4602            MOV              R2, R0
   73 00000004 F04F 0000       MOV              R0, #0      ; R0 = 0
   74 00000008 6008            STR              R0, [R1]    ; [R1] = R0 = 0
   75 0000000A         ; maximum reload value



ARM Macro Assembler    Page 3 


   76 0000000A 4937            LDR              R1, =NVIC_ST_RELOAD_R ; R1 = &N
                                                            VIC_ST_RELOAD_R
   77 0000000C F06F 407F       LDR              R0, =NVIC_ST_RELOAD_M ;      ; 
                                                            R0 = NVIC_ST_RELOAD
                                                            _M
   78 00000010 6008            STR              R0, [R1]    ; [R1] = R0 = NVIC_
                                                            ST_RELOAD_M
   79 00000012 600A            STR              R2, [R1]
   80 00000014         ; any write to current clears it
   81 00000014 4935            LDR              R1, =NVIC_ST_CURRENT_R ; R1 = &
                                                            NVIC_ST_CURRENT_R
   82 00000016 F04F 0000       MOV              R0, #0      ; R0 = 0
   83 0000001A 6008            STR              R0, [R1]    ; [R1] = R0 = 0
   84 0000001C         ; enable SysTick with core clock
   85 0000001C 4934            LDR              R1, =NVIC_SYS_PRI3_R
   86 0000001E F06F 427F       LDR              R2, = NVIC_ST_RELOAD_M
   87 00000022 680B            LDR              R3, [R1]
   88 00000024 EA03 0302       AND              R3, R3, R2
   89 00000028 F04F 4060       MOV              R0, #0xE0000000
   90 0000002C EA43 0300       ORR              R3, R3, R0
   91 00000030 600B            STR              R3, [R1]
   92 00000032 492C            LDR              R1, =NVIC_ST_CTRL_R ; R1 = &NVI
                                                            C_ST_CTRL_R
   93 00000034         ; R0 = ENABLE and CLK_SRC bits set
   94 00000034         ;loop
   95 00000034         ;   B loop
   96 00000034 F04F 0007       MOV              R0, #(NVIC_ST_CTRL_ENABLE+NVIC_
ST_CTRL_CLK_SRC+NVIC_ST_CTRL_INTEN)
   97 00000038 6008            STR              R0, [R1]    ; [R1] = R0 = (NVIC
                                                            _ST_CTRL_ENABLE|NVI
                                                            C_ST_CTRL_CLK_SRC)
   98 0000003A 4770            BX               LR          ; return
   99 0000003C         
  100 0000003C         ;------------SysTick_Wait------------
  101 0000003C         ; Time delay using busy wait.
  102 0000003C         ; Input: R0  delay parameter in units of the core clock 
                       (units of 12.5 nsec for 80 MHz clock)
  103 0000003C         ; Output: none
  104 0000003C         ; Modifies: R0, R1, R3
  105 0000003C         SysTick_Wait
  106 0000003C 492A            LDR              R1, =NVIC_ST_RELOAD_R ; R1 = &N
                                                            VIC_ST_RELOAD_R
  107 0000003E F1A0 0001       SUB              R0, #1
  108 00000042 6008            STR              R0, [R1]    ;delay-1;  // numbe
                                                            r of counts to wait
                                                            
  109 00000044 4927            LDR              R1, =NVIC_ST_CTRL_R ; R1 = &NVI
                                                            C_ST_CTRL_R
  110 00000046         SysTick_Wait_loop
  111 00000046 680B            LDR              R3, [R1]    ; R3 = NVIC_ST_CTRL
                                                            _R
  112 00000048 F413 3380       ANDS             R3, R3, #0x00010000 
                                                            ; Count set?
  113 0000004C D0FB            BEQ              SysTick_Wait_loop
  114 0000004E 4770            BX               LR          ; return
  115 00000050         
  116 00000050         ;------------SysTick_Wait10ms------------
  117 00000050         ; Time delay using busy wait.  This assumes 50 MHz clock
                       



ARM Macro Assembler    Page 4 


  118 00000050         ; Input: R0  number of times to wait 10 ms before return
                       ing
  119 00000050         ; Output: none
  120 00000050         ; Modifies: R0
  121 00000050 000C3500 
                       DELAY10MS
                               EQU              800000      ; clock cycles in 1
                                                            0 ms (assumes 80 MH
                                                            z clock)
  122 00000050         SysTick_Wait10ms
  123 00000050 B510            PUSH             {R4, LR}    ; save current valu
                                                            e of R4 and LR
  124 00000052 0004            MOVS             R4, R0      ; R4 = R0 = remaini
                                                            ngWaits
  125 00000054 D004            BEQ              SysTick_Wait10ms_done 
                                                            ; R4 == 0, done
  126 00000056         SysTick_Wait10ms_loop
  127 00000056 4827            LDR              R0, =DELAY10MS ; R0 = DELAY10MS
                                                            
  128 00000058 F7FF FFFE       BL               SysTick_Wait ; wait 10 ms
  129 0000005C 1E64            SUBS             R4, R4, #1  ; R4 = R4 - 1; rema
                                                            iningWaits--
  130 0000005E D8FA            BHI              SysTick_Wait10ms_loop ; if(R4 >
                                                             0), wait another 1
                                                            0 ms
  131 00000060         SysTick_Wait10ms_done
  132 00000060 E8BD 4010       POP              {R4, LR}    ; restore previous 
                                                            value of R4 and LR
  133 00000064 4770            BX               LR          ; return
  134 00000066         
  135 00000066         SysTick_Handler                      ; Context switching
                                                             occurs here
  136 00000066 B672            CPSID            I
  137 00000068 B501            PUSH{R0,         LR}
  138 0000006A F7FF FFFE       BL               DisableInterrupts ; 2) Prevent 
                                                            interrupt during sw
                                                            itch
  139 0000006E E8BD 4001       POP{R0,          LR}
  140 00000072 4A21            LDR              R2, = PF2   ; Toggle pin for ti
                                                            ming and increment 
                                                            counter
  141 00000074         ;LDR R2, [R2]
  142 00000074 F04F 0300       MOV              R3, #0
  143 00000078 6013            STR              R3, [R2]
  144 0000007A 4820            LDR              R0, = Counts
  145 0000007C 6801            LDR              R1, [R0]
  146 0000007E F101 0101       ADD              R1, #1
  147 00000082 6001            STR              R1, [R0]
  148 00000084         
  149 00000084         
  150 00000084 E92D 0FF0       PUSH             {R4-R11}    ; 3) Save remaining
                                                             regs r4-11
  151 00000088 481C            LDR              R0, = Counts
  152 0000008A 6801            LDR              R1, [R0]
  153 0000008C F101 0101       ADD              R1, #1
  154 00000090 6001            STR              R1, [R0]
  155 00000092 481B            LDR              R0,=Runptr  ; 4) R0=pointer to 
                                                            RunI, old thread
  156 00000094 6801            LDR              R1,[R0]     ;    R1 = RunI



ARM Macro Assembler    Page 5 


  157 00000096 F8C1 D000       STR              SP, [R1]    ; save current stac
                                                            k pointer
  158 0000009A         ;ADD     R1, #4
  159 0000009A         ;LDR     R1, [R1]
  160 0000009A         ;STR     R1, [R0]
  161 0000009A B50F            PUSH             {R0, LR, R2, R3, R1}
  162 0000009C F7FF FFFE       BL               Scheduler
  163 000000A0 E8BD 400F       POP              {R0, LR, R2, R3, R1}
  164 000000A4 6801            LDR              R1, [R0]
  165 000000A6 F8D1 D000       LDR              SP, [R1]    ; load dstack point
                                                            er for new thread
  166 000000AA         
  167 000000AA E8BD 0FF0       POP              {R4-R11}    ; 8) restore regs r
                                                            4-11
  168 000000AE 4A12            LDR              R2, = PF2
  169 000000B0         ;LDR R2, [R2]
  170 000000B0 F04F 0304       MOV              R3, #4
  171 000000B4 6013            STR              R3, [R2]
  172 000000B6         
  173 000000B6 B501            PUSH{R0,         LR}
  174 000000B8 F7FF FFFE       BL               EnableInterrupts ; 2) Prevent i
                                                            nterrupt during swi
                                                            tch
  175 000000BC E8BD 4001       POP{R0,          LR}
  176 000000C0 4770            BX               LR
  177 000000C2         
  178 000000C2         launch_first_thread                  ; launches the firs
                                                            t thread on OS_Laun
                                                            ch
  179 000000C2         
  180 000000C2 490F            LDR              R1, = Runptr
  181 000000C4 6809            LDR              R1, [R1]
  182 000000C6 F8D1 D000       LDR              SP, [R1]
  183 000000CA E8BD 0FF0       POP{R4-R11}
  184 000000CE BC0F            POP{R0-R3}
  185 000000D0 F85D CB04       POP{R12}
  186 000000D4 B001            ADD              SP, #4
  187 000000D6 F8DD E000       LDR              R14, [SP]
  188 000000DA B001            ADD              SP, #4
  189 000000DC B001            ADD              SP, #4
  190 000000DE B662            CPSIE            I
  191 000000E0 4770            BX               LR
  192 000000E2         
  193 000000E2         
  194 000000E2 00 00           ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  195 000000E4                 END                          ; end of file
              E000E010 
              E000E014 
              E000E018 
              E000ED20 
              000C3500 
              40025010 
              00000000 
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4 --apcs=interw
ork --depend=.\systick.d -o.\systick.o -I.\RTE\_Lab5 -IC:\Users\prameen\AppData
\Local\Arm\Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C123 -IC:\Keil_v5\ARM\CM



ARM Macro Assembler    Page 6 


SIS\Include --predefine="__MICROLIB SETA 1" --predefine="__UVISION_VERSION SETA
 529" --predefine="_RTE_ SETA 1" --predefine="TM4C123GH6PM SETA 1" --list=.\sys
tick.lst ..\RTOS_Labs_common\systick.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Counts 00000000

Symbol: Counts
   Definitions
      At line 49 in file ..\RTOS_Labs_common\systick.s
   Uses
      At line 56 in file ..\RTOS_Labs_common\systick.s
      At line 144 in file ..\RTOS_Labs_common\systick.s
      At line 151 in file ..\RTOS_Labs_common\systick.s

DATA 00000000

Symbol: DATA
   Definitions
      At line 47 in file ..\RTOS_Labs_common\systick.s
   Uses
      None
Comment: DATA unused
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 51 in file ..\RTOS_Labs_common\systick.s
   Uses
      None
Comment: .text unused
SysTick_Handler 00000066

Symbol: SysTick_Handler
   Definitions
      At line 135 in file ..\RTOS_Labs_common\systick.s
   Uses
      At line 55 in file ..\RTOS_Labs_common\systick.s
Comment: SysTick_Handler used once
SysTick_Init 00000000

Symbol: SysTick_Init
   Definitions
      At line 69 in file ..\RTOS_Labs_common\systick.s
   Uses
      At line 52 in file ..\RTOS_Labs_common\systick.s
Comment: SysTick_Init used once
SysTick_Wait 0000003C

Symbol: SysTick_Wait
   Definitions
      At line 105 in file ..\RTOS_Labs_common\systick.s
   Uses
      At line 53 in file ..\RTOS_Labs_common\systick.s
      At line 128 in file ..\RTOS_Labs_common\systick.s

SysTick_Wait10ms 00000050

Symbol: SysTick_Wait10ms
   Definitions
      At line 122 in file ..\RTOS_Labs_common\systick.s
   Uses
      At line 54 in file ..\RTOS_Labs_common\systick.s
Comment: SysTick_Wait10ms used once
SysTick_Wait10ms_done 00000060

Symbol: SysTick_Wait10ms_done
   Definitions
      At line 131 in file ..\RTOS_Labs_common\systick.s
   Uses
      At line 125 in file ..\RTOS_Labs_common\systick.s
Comment: SysTick_Wait10ms_done used once
SysTick_Wait10ms_loop 00000056

Symbol: SysTick_Wait10ms_loop
   Definitions
      At line 126 in file ..\RTOS_Labs_common\systick.s
   Uses
      At line 130 in file ..\RTOS_Labs_common\systick.s
Comment: SysTick_Wait10ms_loop used once
SysTick_Wait_loop 00000046




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: SysTick_Wait_loop
   Definitions
      At line 110 in file ..\RTOS_Labs_common\systick.s
   Uses
      At line 113 in file ..\RTOS_Labs_common\systick.s
Comment: SysTick_Wait_loop used once
launch_first_thread 000000C2

Symbol: launch_first_thread
   Definitions
      At line 178 in file ..\RTOS_Labs_common\systick.s
   Uses
      At line 57 in file ..\RTOS_Labs_common\systick.s
Comment: launch_first_thread used once
9 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

DELAY10MS 000C3500

Symbol: DELAY10MS
   Definitions
      At line 121 in file ..\RTOS_Labs_common\systick.s
   Uses
      At line 127 in file ..\RTOS_Labs_common\systick.s
Comment: DELAY10MS used once
GPIO_PORTF_DATA_R 400253FC

Symbol: GPIO_PORTF_DATA_R
   Definitions
      At line 41 in file ..\RTOS_Labs_common\systick.s
   Uses
      None
Comment: GPIO_PORTF_DATA_R unused
NVIC_ST_CTRL_CLK_SRC 00000004

Symbol: NVIC_ST_CTRL_CLK_SRC
   Definitions
      At line 37 in file ..\RTOS_Labs_common\systick.s
   Uses
      At line 96 in file ..\RTOS_Labs_common\systick.s
Comment: NVIC_ST_CTRL_CLK_SRC used once
NVIC_ST_CTRL_COUNT 00010000

Symbol: NVIC_ST_CTRL_COUNT
   Definitions
      At line 36 in file ..\RTOS_Labs_common\systick.s
   Uses
      None
Comment: NVIC_ST_CTRL_COUNT unused
NVIC_ST_CTRL_ENABLE 00000001

Symbol: NVIC_ST_CTRL_ENABLE
   Definitions
      At line 39 in file ..\RTOS_Labs_common\systick.s
   Uses
      At line 96 in file ..\RTOS_Labs_common\systick.s
Comment: NVIC_ST_CTRL_ENABLE used once
NVIC_ST_CTRL_INTEN 00000002

Symbol: NVIC_ST_CTRL_INTEN
   Definitions
      At line 38 in file ..\RTOS_Labs_common\systick.s
   Uses
      At line 96 in file ..\RTOS_Labs_common\systick.s
Comment: NVIC_ST_CTRL_INTEN used once
NVIC_ST_CTRL_R E000E010

Symbol: NVIC_ST_CTRL_R
   Definitions
      At line 32 in file ..\RTOS_Labs_common\systick.s
   Uses
      At line 71 in file ..\RTOS_Labs_common\systick.s
      At line 92 in file ..\RTOS_Labs_common\systick.s
      At line 109 in file ..\RTOS_Labs_common\systick.s

NVIC_ST_CURRENT_R E000E018



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols


Symbol: NVIC_ST_CURRENT_R
   Definitions
      At line 34 in file ..\RTOS_Labs_common\systick.s
   Uses
      At line 81 in file ..\RTOS_Labs_common\systick.s
Comment: NVIC_ST_CURRENT_R used once
NVIC_ST_RELOAD_M 00FFFFFF

Symbol: NVIC_ST_RELOAD_M
   Definitions
      At line 40 in file ..\RTOS_Labs_common\systick.s
   Uses
      At line 77 in file ..\RTOS_Labs_common\systick.s
      At line 86 in file ..\RTOS_Labs_common\systick.s

NVIC_ST_RELOAD_R E000E014

Symbol: NVIC_ST_RELOAD_R
   Definitions
      At line 33 in file ..\RTOS_Labs_common\systick.s
   Uses
      At line 76 in file ..\RTOS_Labs_common\systick.s
      At line 106 in file ..\RTOS_Labs_common\systick.s

NVIC_SYS_PRI3_R E000ED20

Symbol: NVIC_SYS_PRI3_R
   Definitions
      At line 35 in file ..\RTOS_Labs_common\systick.s
   Uses
      At line 85 in file ..\RTOS_Labs_common\systick.s
Comment: NVIC_SYS_PRI3_R used once
PF2 40025010

Symbol: PF2
   Definitions
      At line 42 in file ..\RTOS_Labs_common\systick.s
   Uses
      At line 140 in file ..\RTOS_Labs_common\systick.s
      At line 168 in file ..\RTOS_Labs_common\systick.s

12 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

DisableInterrupts 00000000

Symbol: DisableInterrupts
   Definitions
      At line 63 in file ..\RTOS_Labs_common\systick.s
   Uses
      At line 138 in file ..\RTOS_Labs_common\systick.s
Comment: DisableInterrupts used once
EnableInterrupts 00000000

Symbol: EnableInterrupts
   Definitions
      At line 62 in file ..\RTOS_Labs_common\systick.s
   Uses
      At line 174 in file ..\RTOS_Labs_common\systick.s
Comment: EnableInterrupts used once
Runptr 00000000

Symbol: Runptr
   Definitions
      At line 58 in file ..\RTOS_Labs_common\systick.s
   Uses
      At line 155 in file ..\RTOS_Labs_common\systick.s
      At line 180 in file ..\RTOS_Labs_common\systick.s

STACK 00000000

Symbol: STACK
   Definitions
      At line 59 in file ..\RTOS_Labs_common\systick.s
   Uses
      None
Comment: STACK unused
Scheduler 00000000

Symbol: Scheduler
   Definitions
      At line 61 in file ..\RTOS_Labs_common\systick.s
   Uses
      At line 162 in file ..\RTOS_Labs_common\systick.s
Comment: Scheduler used once
threads 00000000

Symbol: threads
   Definitions
      At line 60 in file ..\RTOS_Labs_common\systick.s
   Uses
      None
Comment: threads unused
6 symbols
365 symbols in table
